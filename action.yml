name: 'Docker Shared Image Tag Action'
description: 'Provides a mechanism for loading or storing an image tag in a Github Repository Variable'
author: 'TrueMark'
branding:
  icon: 'check-circle'
  color: 'red'
inputs:
  new-image-tag:
    required: true
    description: 'The docker image tag to use if an existing one is not found in Repository Variables'
  token:
    required: true
    description: 'The API or personal access token to authorize read and write access to Repository Variables. Note: secrets.GITHUB_TOKEN will not work here.'
  variable-prefix:
    required: false
    description: 'The prefix for the name of the Repository Variable to be saved, which will then be followed by the commit SHA. Must start with a letter. Default is IMAGE_TAG. Example: IMAGE_TAG_<sha>'
    default: 'IMAGE_TAG'
outputs:
  image-tag:
    description: 'The docker image tag that should be used for a given commit SHA.'
    value: "${{ steps.arm64-instance.outputs.instance-id }}"
  existing-tag-found:
    description: 'Whether or not an existing docker image tag was found in Repository Variables for a given commit SHA.'
    value: "${{ steps.get-or-create.outputs.instance-id }}"
runs:
  using: 'composite'
  steps:
    - name: Load image_tag repository variable
      id: load
      shell: bash
      run: |
        echo "image_tag=${{ vars[format('{0}_{1}', inputs.variable-prefix, github.sha)] }}" >> $GITHUB_ENV
    - name: Get or create image_tag
      id: get-or-create
      shell: bash
      run: |
        if [ "$image_tag" == "" ]; then
          echo "image_tag=${{ inputs.new-image-tag }}" >> $GITHUB_OUTPUT
          echo "found=false" >> $GITHUB_OUTPUT
        else
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT
          echo "found=true" >> $GITHUB_OUTPUT
        fi
    - name: Save image_tag Repository Variable
      id: save
      if: ${{ steps.get-or-create.outputs.found }} == 'true'
      uses: action-pack/set-variable@v1
      with:
        name: ${{ vars[format('{0}_{1}', inputs.variable-prefix, github.sha)] }}
        value: ${{ steps.get-or-create.outputs.image_tag }}
        token: ${{ inputs.token }}
